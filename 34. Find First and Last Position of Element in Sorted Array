class Solution {
    private:
     int firstocc(vector<int>&nums, int target)
    {
        int s = 0, e = nums.size()-1;
        int x = -1;
        while(s<=e)
        {
            int mid = s+(e-s)/2;
            if(nums[mid] == target)
            {
                x = mid;
                e = mid -1;
            }
            else if(nums[mid] > target)
            {
                e = mid -1;
            }
            else
            {
                s = mid + 1;
            }
        }
        return x;
    }
    
    
    int lastocc(vector<int> &nums, int target)
    {
        int s = 0, e = nums.size()-1;
        int y = -1;
        while(s<=e)
        {
            int mid = s + (e-s)/2;
            if(nums[mid] == target)
            {
                y = mid;
                s = mid + 1;
            }
            else if(nums[mid] > target)
            {
                e = mid - 1;
            }
            else
            {
                s = mid + 1;
            }
        }
        return y;
    }
    
public:
   
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans;
        ans.push_back(firstocc(nums, target));
        ans.push_back(lastocc(nums, target));
        
        return ans;
    }
};
